<!DOCTYPE html>
<html lang="en-US">
<head>
    <meta charset="utf-8" />
    <title>Sample</title>

    <link href="https://cdn01.boxcdn.net/platform/elements/11.0.2/ja-JP/openwith.css" rel="stylesheet" type="text/css"></link>
    <link href="https://cdn01.boxcdn.net/platform/preview/2.34.0/ja-JP/preview.css" rel="stylesheet" type="text/css"></link>

    <script src="https://cdn.polyfill.io/v2/polyfill.min.js?features=es6,Intl"></script>
    <script src="https://cdn01.boxcdn.net/polyfills/core-js/2.5.3/core.min.js"></script>

    <script src="https://cdn01.boxcdn.net/platform/elements/11.0.2/ja-JP/openwith.js"></script>
    <script src="https://cdn01.boxcdn.net/platform/preview/2.34.0/ja-JP/preview.js"></script>

    <style>
        .openwith-container {
            margin-left: 250px;
        }
        .preview-container {
            height: 800px;
            width: 100%;
        }
    </style>

</head>
<body>
<h3>File Id: <%= fileId %></h3>

<div id="container">
    <div class="openwith-container"></div>
    <div class="preview-container"></div>
</div>

<script>
    // app.jsから渡されたパラメータ
    window.fileId = "<%= fileId %>"
    window.token = "<%= token %>"

    const openWith = new Box.ContentOpenWith();
    openWith.show(fileId, token,  { container: ".openwith-container"})

    window.preview = new Box.Preview();
    preview.show(fileId, token, { container: ".preview-container", autoFocus: false });

    // ファイルの更新に反応するため、Websocketを利用する
    const host = location.origin.replace(/^http/, "ws"); // -> wss://xxx.herokuapp.com/
    const ws = new WebSocket(host);

    let confirmed = null
    ws.onmessage = event => {
        // Herokuからメッセージが来たとき。
        // updatedであれば、簡易的にconfirmウィンドウを出す。
        // OKを押したら、簡易的にリロードして再読み込みし、変更を反映。
        // OK, Cancelの確認は一度だけ聞く。
        if(event.data === "updated" && confirmed !== false) {
            if(confirmed === null) {
                confirmed = confirm("refresh?")
            }
            if(confirmed) {
                // previewだけを描画し直す。
                // window.preview.hide(); // hide()はしてもしなくてもすぐには見た目変わらず。
                // preview.show(..) // 単純にshowを再度呼んだだけでは画面が更新されない。
                preview = new Box.Preview(); // preivewオブジェクトは再利用できないっぽい。再度newする必要があるみたい。
                // 毎回プレビューの位置までスクロールされたくないのでautoFocus:false
                preview.show(fileId, token, { container: ".preview-container", autoFocus: false });
            }
        }
    }
</script>
</body>
</html>
